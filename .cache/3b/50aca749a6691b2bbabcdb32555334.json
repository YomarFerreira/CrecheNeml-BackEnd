{"id":"Pz4l","dependencies":[{"name":"C:\\workspace\\Neml Node_React\\BackEnd_Node\\package.json","includedInParent":true,"mtime":1703819649038},{"name":"C:\\workspace\\Neml Node_React\\BackEnd_Node\\node_modules\\ansi-regex\\package.json","includedInParent":true,"mtime":1701688042815}],"generated":{"js":"\"use strict\";module.exports=function(){var d=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).onlyFirst,n=void 0!==d&&d,o=[\"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\",\"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))\"].join(\"|\");return new RegExp(o,n?void 0:\"g\")};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ansi-regex/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ansi-regex/index.js","name":"module","original":{"line":3,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/ansi-regex/index.js","name":"exports","original":{"line":3,"column":7},"generated":{"line":1,"column":20}},{"source":"node_modules/ansi-regex/index.js","original":{"line":3,"column":17},"generated":{"line":1,"column":28}},{"source":"node_modules/ansi-regex/index.js","original":{"line":3,"column":47},"generated":{"line":1,"column":39}},{"source":"node_modules/ansi-regex/index.js","name":"_ref$onlyFirst","original":{"line":3,"column":42},"generated":{"line":1,"column":43}},{"source":"node_modules/ansi-regex/index.js","name":"arguments","original":{"line":3,"column":47},"generated":{"line":1,"column":46}},{"source":"node_modules/ansi-regex/index.js","name":"length","original":{"line":3,"column":47},"generated":{"line":1,"column":56}},{"source":"node_modules/ansi-regex/index.js","name":"arguments","original":{"line":3,"column":47},"generated":{"line":1,"column":63}},{"source":"node_modules/ansi-regex/index.js","name":"undefined","original":{"line":3,"column":47},"generated":{"line":1,"column":71}},{"source":"node_modules/ansi-regex/index.js","name":"arguments","original":{"line":3,"column":47},"generated":{"line":1,"column":75}},{"source":"node_modules/ansi-regex/index.js","name":"undefined","original":{"line":3,"column":47},"generated":{"line":1,"column":85}},{"source":"node_modules/ansi-regex/index.js","name":"arguments","original":{"line":3,"column":47},"generated":{"line":1,"column":88}},{"source":"node_modules/ansi-regex/index.js","original":{"line":3,"column":40},"generated":{"line":1,"column":98}},{"source":"node_modules/ansi-regex/index.js","original":{"line":3,"column":40},"generated":{"line":1,"column":101}},{"source":"node_modules/ansi-regex/index.js","name":"onlyFirst","original":{"line":3,"column":19},"generated":{"line":1,"column":105}},{"source":"node_modules/ansi-regex/index.js","name":"onlyFirst","original":{"line":3,"column":19},"generated":{"line":1,"column":115}},{"source":"node_modules/ansi-regex/index.js","original":{"line":3,"column":31},"generated":{"line":1,"column":122}},{"source":"node_modules/ansi-regex/index.js","name":"_ref$onlyFirst","original":{"line":3,"column":28},"generated":{"line":1,"column":126}},{"source":"node_modules/ansi-regex/index.js","name":"_ref$onlyFirst","original":{"line":3,"column":36},"generated":{"line":1,"column":129}},{"source":"node_modules/ansi-regex/index.js","name":"pattern","original":{"line":4,"column":7},"generated":{"line":1,"column":131}},{"source":"node_modules/ansi-regex/index.js","original":{"line":4,"column":17},"generated":{"line":1,"column":133}},{"source":"node_modules/ansi-regex/index.js","original":{"line":5,"column":2},"generated":{"line":1,"column":134}},{"source":"node_modules/ansi-regex/index.js","original":{"line":6,"column":2},"generated":{"line":1,"column":261}},{"source":"node_modules/ansi-regex/index.js","name":"join","original":{"line":7,"column":3},"generated":{"line":1,"column":321}},{"source":"node_modules/ansi-regex/index.js","original":{"line":7,"column":8},"generated":{"line":1,"column":326}},{"source":"node_modules/ansi-regex/index.js","original":{"line":9,"column":1},"generated":{"line":1,"column":331}},{"source":"node_modules/ansi-regex/index.js","original":{"line":9,"column":8},"generated":{"line":1,"column":338}},{"source":"node_modules/ansi-regex/index.js","name":"RegExp","original":{"line":9,"column":12},"generated":{"line":1,"column":342}},{"source":"node_modules/ansi-regex/index.js","name":"pattern","original":{"line":9,"column":19},"generated":{"line":1,"column":349}},{"source":"node_modules/ansi-regex/index.js","name":"onlyFirst","original":{"line":9,"column":28},"generated":{"line":1,"column":351}},{"source":"node_modules/ansi-regex/index.js","name":"undefined","original":{"line":9,"column":40},"generated":{"line":1,"column":358}},{"source":"node_modules/ansi-regex/index.js","original":{"line":9,"column":52},"generated":{"line":1,"column":360}}],"sources":{"node_modules/ansi-regex/index.js":"'use strict';\n\nmodule.exports = ({onlyFirst = false} = {}) => {\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n};\n"},"lineCount":null}},"error":null,"hash":"1d5bc327d70ee241338303808af237b7","cacheData":{"env":{}}}